#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
using namespace std;

int minimizeMaxDifference(vector<int>& arr) {
    int N = arr.size();
    vector<int> prefixSum(N + 1, 0);
    
    // Calculate the prefix sum array
    for (int i = 0; i < N; ++i) {
        prefixSum[i + 1] = prefixSum[i] + arr[i];
    }
    
    int totalSum = prefixSum[N];
    int minDifference = INT_MAX;
    
    // Iterate to find the minimum difference
    for (int i = 1; i < N; ++i) {
        int sum1 = prefixSum[i];       // Sum of the first subarray
        int sum2 = totalSum - sum1;    // Sum of the second subarray
        minDifference = min(minDifference, abs(sum1 - sum2));
    }
    
    return minDifference;
}

int main() {
    int N;
    cin >> N;
    vector<int> arr(N);
    for (int i = 0; i < N; ++i) {
        cin >> arr[i];
    }
    
    cout << minimizeMaxDifference(arr) << endl;
    return 0;
}
